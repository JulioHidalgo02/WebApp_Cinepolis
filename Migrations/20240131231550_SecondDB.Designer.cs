// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp_Cinepolis.Context;

#nullable disable

namespace WebApp_Cinepolis.Migrations
{
    [DbContext(typeof(CinepolisContext))]
    [Migration("20240131231550_SecondDB")]
    partial class SecondDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Cine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cines");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Combo", b =>
                {
                    b.Property<int>("idCombo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCombo"));

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("idCombo");

                    b.ToTable("combos");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("Horarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.HasKey("IdHorario");

                    b.HasIndex("IdPelicula");

                    b.ToTable("horarios");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Pelicula", b =>
                {
                    b.Property<int>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPelicula"));

                    b.Property<string>("Acciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSala")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPelicula");

                    b.HasIndex("IdSala");

                    b.ToTable("peliculas");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int>("IdCombo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCombo");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Sala", b =>
                {
                    b.Property<int>("IdSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSala"));

                    b.Property<int>("CapacidadPersonas")
                        .HasColumnType("int");

                    b.Property<int>("IdCine")
                        .HasColumnType("int");

                    b.HasKey("IdSala");

                    b.HasIndex("IdCine");

                    b.ToTable("salas");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Horario", b =>
                {
                    b.HasOne("WebApp_Cinepolis.Entities.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Pelicula", b =>
                {
                    b.HasOne("WebApp_Cinepolis.Entities.Sala", "sala")
                        .WithMany("Peliculas")
                        .HasForeignKey("IdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sala");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Producto", b =>
                {
                    b.HasOne("WebApp_Cinepolis.Entities.Combo", "Combo")
                        .WithMany("Productos")
                        .HasForeignKey("IdCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Sala", b =>
                {
                    b.HasOne("WebApp_Cinepolis.Entities.Cine", "cine")
                        .WithMany("Salas")
                        .HasForeignKey("IdCine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cine");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Cine", b =>
                {
                    b.Navigation("Salas");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Combo", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("WebApp_Cinepolis.Entities.Sala", b =>
                {
                    b.Navigation("Peliculas");
                });
#pragma warning restore 612, 618
        }
    }
}
